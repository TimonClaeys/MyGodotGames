[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
output_port_for_preview = 0
uniform_name = "Color"

[sub_resource type="VisualShader" id=2]
code = "shader_type canvas_item;
uniform vec4 Color : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:6
	vec3 n_out6p0 = Color.rgb;
	float n_out6p1 = Color.a;

// Output:0
	COLOR.rgb = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -328, 51 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 350, 150 )
nodes/fragment/0/position = Vector2( 20, 200 )
nodes/fragment/6/node = SubResource( 1 )
nodes/fragment/6/position = Vector2( -160, 200 )
nodes/fragment/connections = PoolIntArray( 6, 0, 0, 0 )

[resource]
shader = SubResource( 2 )
shader_param/Color = Color( 0.764706, 0.427451, 0.427451, 1 )
